version: '3'

services:
  op-db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - op-db-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    networks:
      - dokploy-network
  op-kv:
    image: redis:7.2.5-alpine
    restart: always
    volumes:
      - op-kv-data:/data
    command:
      - redis-server
      - '--maxmemory-policy'
      - noeviction
    expose:
      - 6379
    networks:
      - dokploy-network
  op-geo:
    image: observabilitystack/geoip-api:latest
    restart: always
    expose:
      - 8080
    networks:
      - dokploy-network
  op-ch:
    image: clickhouse/clickhouse-server:24.3.2-alpine
    restart: always
    volumes:
      - op-ch-data:/var/lib/clickhouse
      - op-ch-logs:/var/log/clickhouse-server
      - ./self-hosting/clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/op-config.xml:ro
      - ./self-hosting/clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/op-user-config.xml:ro
      - ./self-hosting/clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    healthcheck:
      test:
        - CMD-SHELL
        - clickhouse-client --query "SELECT 1"
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    expose:
      - 8123
      - 9000
      - 9009
    networks:
      - dokploy-network
    command: >
      sh -c "
        /entrypoint.sh &
        until clickhouse-client --query 'SELECT 1' >/dev/null 2>&1; do
          echo 'Waiting for ClickHouse to start...'
          sleep 1
        done
        echo 'Running init-db.sh...'
        bash /docker-entrypoint-initdb.d/init-db.sh
        wait
      "
  op-api:
    image: lindesvard/openpanel-api:latest
    restart: always
    command: |
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...'
        while ! nc -z op-db 5432; do
          sleep 1
        done
        echo 'PostgreSQL is ready'

        echo 'Waiting for ClickHouse to be ready...'
        while ! nc -z op-ch 8123; do
          sleep 1
        done
        echo 'ClickHouse is ready'

        echo 'Running migrations...'
        CI=true pnpm -r run migrate:deploy

        pnpm start
      "
    depends_on:
      - op-db
      - op-ch
      - op-kv
      - op-geo
    env_file:
      - .env
    expose:
      - 3000
    networks:
      - dokploy-network
    labels:
      - traefik.docker.network=dokploy-network
      - traefik.http.routers.infra-openpanel-jbubyl-8-web.rule=Host(`panel.theoffercall.com`) && PathPrefix(`/api`)
      - traefik.http.routers.infra-openpanel-jbubyl-8-web.entrypoints=web
      - traefik.http.routers.infra-openpanel-jbubyl-8-web.middlewares=infra-openpanel-jbubyl-8-strip@docker,redirect-to-https@file
      - traefik.http.services.infra-openpanel-jbubyl-8-web.loadbalancer.server.port=3000
      - traefik.http.routers.infra-openpanel-jbubyl-8-web.service=infra-openpanel-jbubyl-8-web
      - traefik.http.routers.infra-openpanel-jbubyl-8-websecure.rule=Host(`panel.theoffercall.com`) && PathPrefix(`/api`)
      - traefik.http.routers.infra-openpanel-jbubyl-8-websecure.entrypoints=websecure
      - traefik.http.routers.infra-openpanel-jbubyl-8-websecure.tls.certresolver=letsencrypt
      - traefik.http.routers.infra-openpanel-jbubyl-8-websecure.middlewares=infra-openpanel-jbubyl-8-strip@docker
      - traefik.http.services.infra-openpanel-jbubyl-8-websecure.loadbalancer.server.port=3000
      - traefik.http.routers.infra-openpanel-jbubyl-8-websecure.service=infra-openpanel-jbubyl-8-websecure
      - traefik.http.middlewares.infra-openpanel-jbubyl-8-strip.stripPrefix.prefixes=/api
      - traefik.enable=true


  op-dashboard:
    image: lindesvard/openpanel-dashboard:latest
    restart: always
    depends_on:
      - op-api
    env_file:
      - .env
    expose:
      - 3000
    networks:
      - dokploy-network

  op-worker:
    image: lindesvard/openpanel-worker:latest
    restart: always
    depends_on:
      - op-api
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 4
    expose:
      - 3000
    labels:
      - "traefik.http.routers.infra-openpanel-uttntd-61-web.middlewares=redirect-to-https@file,worker-basic-auth@file"
      - "traefik.http.routers.infra-openpanel-uttntd-61-websecure.middlewares=worker-basic-auth@file"
    networks:
      - dokploy-network

volumes:
  op-db-data:
    driver: local
  op-kv-data:
    driver: local
  op-ch-data:
    driver: local
  op-ch-logs:
    driver: local
